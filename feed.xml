<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>한량의 Jekyll 블로그</title>
    <description>안녕하세요. CLI를 모르는 한량이 만든 Jekyll 블로그에 오셨습니다.</description>
    <link>http://halryang.github.io</link>
    <atom:link href="http://halryang.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Jekyll에서 Youtube 영상을 Responsive하게 임베딩하기</title>
        <description>&lt;p&gt;Jekyll은 정적인 사이트를 만드는 툴로서, 지금까지 제가 본 바론 글을 쓰기에 최적화 되어 있습니다. Code highlight도 있어 개발자가 쓰기에 딱 좋아보입니다. 하지만 저는 개발은 전혀 모르고 개인 블로그를 가볍게 운영하려고 Jekyll을 사용하고 있습니다. 가끔 Youtube에서 좋은 영상을 발견하면 블로그에 올려두기도 하는데, Jekyll에선 Liquid Tag를 이용해서 Youtube 영상을 공유할 수 있습니다.&lt;/p&gt;

&lt;p&gt;저는 Liquid Tag는 &lt;a href=&quot;https://twitter.com/ttscoff&quot;&gt;ttscoff&lt;/a&gt;가 만든 플러그인(&lt;a href=&quot;https://github.com/ttscoff/JekyllPlugins/tree/master/YouTube&quot; title=&quot;JekyllPlugins/YouTube at master · ttscoff/JekyllPlugins · GitHub&quot;&gt;GitHub Repo&lt;/a&gt;)을 사용합니다. Youtube 외에 Vimeo 등을 임베딩하는 &lt;a href=&quot;https://gist.github.com/vanto/1455726&quot; title=&quot;OEmbed Liquid Tag for Jekyll&quot;&gt;OEmbed&lt;/a&gt;도 쓰려고 시도해봤으나 뭐가 문제인지 영상이 나오지 않았습니다.&lt;/p&gt;

&lt;p&gt;YouTube Jekyll Plugin은 로컬 지킬에 &amp;quot;_plugins&amp;quot; 폴더를 만들고 &amp;quot;youtube_tag.rb&amp;quot; 파일을 넣으면 사용 준비가 끝난 것입니다. 이제 글을 적다가 영상을 넣기 원하는 곳에 &lt;code&gt;{ % youtube https://www.youtube.com/watch?v=G33WiEktUo8 % }&lt;/code&gt;의 형식으로 YouTube 주소를 넣으면 됩니다. 글만 있으니 말이 나온 김에 좋은 노래 하나 삽입하고 계속 글을 이어가죠.&lt;/p&gt;

&lt;style&gt;.bt-video-container iframe,.bt-video-container object,.bt-video-container embed{position:absolute;top:0;left:0;width:100%;height:100%;margin-top:0}&lt;/style&gt;

&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:56.25%;height:auto;max-width:100%overflow:hidden&quot;&gt;&lt;iframe width=&quot;640&quot; height=&quot;480&quot; src=&quot;http://www.youtube.com/embed/G33WiEktUo8?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;ttscoff의 플러그인은 반응형으로 삽입됩니다. 크기가 작은 모바일 기기에서도 영상이 잘리지 않는다는 장점이 있지요. 한 가지 마음에 들지 않는 점이 있다면 영상 위 아래로 검은 여백이 생긴다는 것이었습니다. 그래서 방법을 열심히 검색해서 &amp;lt;&lt;a href=&quot;http://embedresponsively.com/&quot;&gt;http://embedresponsively.com/&lt;/a&gt;&amp;gt;라는 사이트를 알게 되었습니다. youtube 영상 주소를 입력하면 반응형으로 임베딩할 수 있는 주소를 알려주는 곳입니다. 예를 들면 아래와 같은 형태로 나옵니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;style&amp;gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; height: auto; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&amp;lt;/style&amp;gt;&amp;lt;div class=&amp;#39;embed-container&amp;#39;&amp;gt;&amp;lt;iframe src=&amp;#39;http://www.youtube.com/embed/eqSCunKweu8&amp;#39; frameborder=&amp;#39;0&amp;#39; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;물론 이 주소를 마크다운 문서에 그대로 붙여 넣고 사용해도 되지만 문서를 편집하면서 보기에 영 좋지 않습니다. 그래서 &amp;quot;youtube_tag.rb&amp;quot; 파일을 위 사이트에서 만들어진 주소를 참고해서 좀 변형했습니다. 그랬더니 위아래에 있던 검은 여백이 사라졌습니다. 이것으로 제가 원하는 모습의 youtube 임베딩이 가능해졌습니다. 제가 수정한 파일은 &lt;a href=&quot;/assets/youtube_tag.rb&quot;&gt;이곳&lt;/a&gt;을 누르시면 내려받을 수 있습니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Nov 2014 20:04:40 +0900</pubDate>
        <link>http://halryang.github.io/embed-youtube-responsively/</link>
        <guid isPermaLink="true">http://halryang.github.io/embed-youtube-responsively/</guid>
      </item>
    
      <item>
        <title>Delete TimeMachine Backup</title>
        <description>&lt;ol&gt;
&lt;li&gt;OS X에서 휴지통이 비워지지 않을 때, terminal에 &lt;code&gt;sudo rm -rf&lt;/code&gt; 라고 적고, 터미널로 지워지지 않는 폴더를 드래그 앤 엔터.&lt;/li&gt;
&lt;li&gt;외장하드 타임머신 백업은 위의 방법으로 안된다. 터미널에서 백업에 사용했던 volume으로 &lt;code&gt;cd /Volumes/Volume이름&lt;/code&gt; 들어가서 &lt;code&gt;sudo rm -rf .Trashes&lt;/code&gt; 엔터. 이때 progress bar 같은 거 없다. 그냥 다시 &lt;code&gt;$&lt;/code&gt;커맨드 프롬프트 나올때까지 진득하니 기다려야 함.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;from &lt;a href=&quot;http://pondini.org/TM/E6.html&quot; title=&quot;Time Machine - Troubleshooting E6. Can&amp;#39;t empty the trash after deleting backups via the Finder&quot;&gt;Time Machine - Troubleshooting E6. Can&amp;#39;t empty the trash after deleting backups via the Finder&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Nov 2014 01:24:14 +0900</pubDate>
        <link>http://halryang.github.io/delete-timemachine-backup/</link>
        <guid isPermaLink="true">http://halryang.github.io/delete-timemachine-backup/</guid>
      </item>
    
      <item>
        <title>모유수유 권장 병원</title>
        <description>&lt;p&gt;2014년 11월 5일, 모유수유를 권장하는 병원이라고 버젓이 적혀 있는 산부인과에서 둘째를 출산했습니다. 모유수유를 권장한다고 적혀 있던 안내문에는 출산 후 2시간이면 엄마 젖을 물릴 수 있다고 적혀 있었습니다. 물론 그때 바로 젖이 돌지 않지만, 아이가 엄마의 젖을 인식하고 엄마와 아이의 유대관계를 형성하는 데 많은 도움이 되겠지요. 그런데 아이를 출산하고 두 시간이 지나도 병실로 아이를 데려다 준다는 얘기가 전혀 없었습니다. 저녁에 출산해서 그런 것인지 싶어서 간호사에게 물어보니 면회시간에만 아이를 볼 수 있다고 했습니다. 출산하느라 힘든 아내를 생각하는 마음으로 그날 저녁은 편하게 생각하고 그냥 자기로 했습니다.&lt;/p&gt;

&lt;p&gt;다음날이 되어 아이를 아침 면회시간이 되어 볼 수 있었고 아침 면회시간에는 미리 겉싸개를 챙겨가지 않아서인지 다음 면회시간에 겉싸개를 가져오셔서 아이를 병실로 데려가시라는 안내를 받았습니다. 기다리던 첫 아이 면회는 그렇게 길어야 3분으로 끝났습니다. 그 이후에도 수유를 위해서 아이를 보러 오라는 말은 없었습니다. 이쯤 되니 &amp;quot;모유수유 권장병원&amp;quot;이라는 단어에 의심이 갑니다.&lt;/p&gt;

&lt;p&gt;입원 3박 4일째, 원래 일주일 동안 병실조리를 하려고 했기에 이제 수유를 고민하기 시작했습니다. 젖이 돌기 시작하는 것 같아서 병원 측에 수유는 어떻게 할 수 있는지 물어봤더니 처음에 돌아온 대답은 &amp;quot;수유는 면회시간에만 할 수 있다&amp;quot;는 것이었습니다. 계속 옆에 데리고 있으면서 시도해도 쉽지 않을 수 있는 것을 하루 네 번 면회시간에만 할 수 있다니요. 아이가 먹을 때마다 전화를 해주거나 하진 않는지 물었더니 그제야 그렇게도 가능하다고 하더군요. 그런데 저녁 시간 이후에 그렇게 전화해주진 못하고 밤부터 아침까지는 분유를 먹인다고 했습니다. 마지막으로 그럼 모자동실은 어떻게 되냐고 물어봤더니 모자동실을 하시면 아이의 모든 관리는 이제 산모가 알아서 해야 한다고 했습니다. 씻기는 것도 알아서 해야 하는지 물어보니 하루에 한 번 씻겨줄 수는 있다고 했습니다.&lt;/p&gt;

&lt;p&gt;하루 한 번 씻겨주고 밥을 넣어준다고 병실조리비용을 내고 입원해있기는 너무 아깝다는 생각이 들었습니다. 가격보다는 서비스에 실망했습니다. 기반 시설과 서비스를 갖추고 수유를 권장하는 병원이라고 홍보해야지요. 특정 병원을 비난하려는 목적으로 글을 쓰고 있는 것은 아니니 병원의 이름을 적진 않겠습니다.&lt;/p&gt;

&lt;p&gt;어쨌든 이렇게 시행착오를 겪고 검색하다보니, 유니세프에서 &amp;quot;아기에게 친근한 병원&amp;quot;을 정의한 것을 찾았습니다. WHO와 Unicef가 주창한 아기에게 친근한 병원 만들기 운동에서 말하는 &lt;strong&gt;&amp;quot;성공적인 엄마젖 먹이기 10단계&amp;quot;&lt;/strong&gt;는 다음과 같습니다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;병원은 의료요원을 위한 모유수유 정책을 문서화 한다.&lt;/li&gt;
&lt;li&gt;이 정책을 실행하기 위하여 모든 의료요원에게 모유수유 기술을 훈련시킨다.&lt;/li&gt;
&lt;li&gt;엄마젖의 장점과 젖먹이는 방법을 임산부에게 교육시킨다.&lt;/li&gt;
&lt;li&gt;출생 후 30분 이내에 엄마젖을 빨리기 시작한다.&lt;/li&gt;
&lt;li&gt;임산부에게 엄마젖을 먹이는 방법과 아기와 떨어져 있을 때 젖분비를 유지하는 방법을 자세히 가르친다.&lt;/li&gt;
&lt;li&gt;갓난 아기에게 엄마젖 이외의 다른 음식물을 주지 않는다.&lt;/li&gt;
&lt;li&gt;엄마와 아기는 하루 24시간 같은 방을 쓴다.&lt;/li&gt;
&lt;li&gt;엄마젖은 아기가 원할 때마다 먹인다.&lt;/li&gt;
&lt;li&gt;아기에게 인공 젖꼭지나 노리개 젖꼭지를 물리지 않는다.&lt;/li&gt;
&lt;li&gt;엄마젖 먹이는 모임을 만들도록 도와주고 퇴원 후 모임에 참여하도록 해준다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;유니세프한국위원회에서는 아기에게 친근한 병원의 목록을 공개하고 있습니다. 각 병원이 실제로 얼마나 잘 적용하고 있는지는 모르지만 적어도 이 목록에 있는 병원들은 모유수유에 대한 관심이 있지 않을까요? &amp;quot;그동안 총 68개의 병원이 아기에게 친근한 병원으로 임명되었으나, 임명 후 정기적으로 실시되는 재평가를 거쳐 현재 전국 32개 병원이 아기에게 친근한 병원 타이틀을 가지고 있다&amp;quot;는 글을 보면 이 목록을 믿을만하다고 생각합니다. 모유수유를 할 예정인 부모님은 한번 &lt;a href=&quot;http://www.unicef.or.kr/education/mommy/withus_hospital.asp&quot; title=&quot;유니세프한국위원회&quot;&gt;유니세프한국위원회&lt;/a&gt;에 들러보시고 참고하시길 권합니다. 링크한 웹페이지의 가장 하단에 2014년 11월 현재 아기에게 친근한 병원 명단이 있습니다.&lt;/p&gt;

&lt;p&gt;전 유니세프나 이 목록에 속한 병원 어느 곳과도 연관이 없습니다. 아이를 낳는 것도 고생이지만, 낳고 나서 수유하는 과정에서 겪는 아픔도 곁에서 지켜보기 안타깝습니다. 그 안타까운 마음에서 저는 이 정보를 미리 발견하지 못했지만 다른 분들에게라도 도움이 되었으면 하는 마음에 글을 남깁니다. 이 글에 관심을 가지고 읽으신 분이라면 아마도 가정을 이루고 아이가 있으시거나 아이를 가지실 예정이시겠죠. 모두 건강하고 행복한 가정을 이루시길 바랍니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Nov 2014 23:32:35 +0900</pubDate>
        <link>http://halryang.github.io/breastfeeding-hospital/</link>
        <guid isPermaLink="true">http://halryang.github.io/breastfeeding-hospital/</guid>
      </item>
    
      <item>
        <title>From Wordpress To Jekyll</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://ko.wordpress.org/&quot;&gt;워드프레스&lt;/a&gt;에서 &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;지킬&lt;/a&gt;로 갈아탔습니다. 워드프레스에 있던 글들은 xml 파일로 저장하고 있었기에 일부러 지운 글을 제외하고 옮겼습니다. 다만 포스트의 고유주소가 달라져서 기존 주소로는 접근이 불가할 것 같습니다.&lt;/p&gt;

&lt;p&gt;워드프레스를 사용하면서 &lt;strong&gt;무겁다&lt;/strong&gt;고 느껴졌습니다. 제 능력 문제겠지만 최소한의 기능을 가진 테마를 사용해도 블로그가 무겁게 느껴졌습니다. 그렇다고 테마를 직접 만들기는 힘들고, 간단히 수정을 통해서 보완할 수 있는 부분엔 한계가 있었습니다. 플러그인을 적용하면 더욱 느려지는 블로그를 보면 답답합니다.&lt;/p&gt;

&lt;p&gt;지킬은 &lt;a href=&quot;https://github.com/&quot;&gt;깃허브&lt;/a&gt; 페이지를 이용해서 무료로 운영이 가능하다는 얘기를 듣고 최근 관심을 많이 갖고 있었습니다. 게다가 꽤나 빠르다고 하니 더욱 구미가 당겨서 &lt;a href=&quot;https://halryang.github.io&quot;&gt;만들어 보기&lt;/a&gt;도 했습니다. 만드는 과정은 &lt;a href=&quot;http://halryang.github.io/Start-Blogging-With-Jekyll/&quot; title=&quot;GitHub pages를 이용하여 Jekyll Blog를 만들자 – Halryang&amp;#39;s Jekyll blog&quot;&gt;이 글&lt;/a&gt;에 적어 뒀습니다. 한번 만들어 보니 그리 어렵지 않게 같은 테마를 입힐 수 있겠다 싶어서 웹호스팅을 받던 공간에 워드프레스 대신 지킬을 올리기로 했습니다.&lt;/p&gt;

&lt;p&gt;일단 깃허브 페이지로 올린 테마와 같은 테마를 적용하고 워드프레스에 올렸던 글들을 불러와서 깨진 링크를 수정했습니다. 지금 이 블로그가 지킬로 만든 블로그입니다. 제가 미처 확인하지 못한 깨진 링크를 발견하시면 알려주세요. 이미지를 다 백업하지 못해서 이전 워드프레스에 올렸던 글인데도 이미지가 사라진 글도 있습니다.&lt;/p&gt;

&lt;p&gt;블로그에 내용이 그리 많지 않아서 사이트 크기 자체가 크지 않습니다. Dropbox에 로컬 폴더를 올려서 빌드하고 만들어진 &amp;quot;_site&amp;quot; 폴더를 웹호스팅 받는 ftp 서버의 public_html 폴더에 동기화하는 형태로 사용중입니다. FTP 클라이언트 앱은 맥에서 ForkLift 2를 사용하고 있습니다. ForkLift 2는 &lt;strong&gt;synclet&lt;/strong&gt;이라는 훌륭한 기능이 있습니다. 로컬 폴더와 FTP 서버의 폴더를 지정해두고 동기화 옵션을 한 번 설정하면 이후엔 synclet.app을 실행하기만 하면 미리 설정한 옵션에 따라 동기화가 진행됩니다. 깃허브 페이지를 이용할 때 commit, push 하는 두 단계가 필요하다면 웹호스팅을 받는 경우 build, synclet 실행의 두 단계로 사이트를 변경할 수 있는 것이니 그리 불편하지 않습니다.&lt;/p&gt;

&lt;p&gt;지킬을 사용하기로 결정하고 가장 마음에 드는 것은 글을 따로 백업할 필요가 전혀 없다는 것입니다. 애초에 드랍박스에 있는 글로 사이트를 빌드해서 올리는 것이니 드랍박스의 폴더를 지우지 않는 이상 웹에 올라간 글이 실수로 지워져도 데이터는 그대로 남습니다. 깃을 이용해서 문서의 버전 관리도 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;아직 플러그인이나 테마가 완성되진 않았습니다. 지금까지 한 작업은 테마를 고르고 배경색, 글자 크기 조정, 깨진 링크 수정, 이미지 삽입시 가운데 정렬, Pagination 설정입니다. 앞으로 블로그 내 검색 가능하도록 설정하는 것과 테마를 조금 더 최적화할 생각입니다. 이제 살펴보기 시작한 단계니 어쩌면 더 마음에 드는 테마를 발견하고 아예 테마를 바꾸게 될 수도 있겠지요. 후에 변경사항 중 남기고픈 사항이 있으면 또 다시 포스팅하겠습니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Nov 2014 08:07:11 +0900</pubDate>
        <link>http://halryang.github.io/From-Wordpress-To-Jekyll/</link>
        <guid isPermaLink="true">http://halryang.github.io/From-Wordpress-To-Jekyll/</guid>
      </item>
    
      <item>
        <title>How I use nvALT</title>
        <description>&lt;ol&gt;
&lt;li&gt;nvALT 소개&lt;/li&gt;
&lt;li&gt;nvALT의 특징&lt;/li&gt;
&lt;li&gt;nvALT 기본 사용법

&lt;ol&gt;
&lt;li&gt;노트 검색/관리&lt;/li&gt;
&lt;li&gt;새로운 노트 만들기&lt;/li&gt;
&lt;li&gt;노트에 태그 지정하기&lt;/li&gt;
&lt;li&gt;노트 즐겨찾기 이용하기&lt;/li&gt;
&lt;li&gt;노트 미리보기&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;노트 작성 팁

&lt;ol&gt;
&lt;li&gt;북마클릿을 이용해서 노트 작성&lt;/li&gt;
&lt;li&gt;웹브라우저 익스텐션을 사용해서 노트 작성&lt;/li&gt;
&lt;li&gt;Keyboard Maestro Macro를 이용해서 빠른 노트 작성&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;맺음말&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2&gt;nvALT 소개&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://brettterpstra.com/projects/nvalt/&quot;&gt;nvALT&lt;/a&gt;는 &lt;a href=&quot;http://brettterpstra.com/about/&quot;&gt;Brett Terpstra&lt;/a&gt;가 Notational Velocity를 기반으로 만든 맥용 plain text 글쓰기 앱이다. 겉으로 보기엔 정말 평범하고 어찌 보면 다른 유려한 디자인의 글쓰기 앱보다 이전 시대의 유물 같아 보일 수 있다. 유물이라는 표현은 조금 심했다. 어쨌든 nvALT는 일기를 잘 쓰지 않던 사람도 일기를 쓰고 싶어지게 한다는 &lt;a href=&quot;http://dayoneapp.com/&quot;&gt;DayOne&lt;/a&gt;과 같은 앱은 아니다. 하지만 nvALT는 사용자가 적어야 하는 글의 내용에 집중하도록 돕는다. 이미 작성한 노트를 관리, 검색하는 것도 매우 빠르다. 단순한 외형 속에 숨어 있는 기능을 사용하다 보면 어느새 뭔가 적을 일이 생기면 자연스레 nvALT를 실행하는 자신을 발견하게 된다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;nvALT doesn’t just record your words; it’s specifically designed to make searching for and organizing your notes super-fast and easy. _from &lt;a href=&quot;http://www.macworld.com/article/2047073/nvalt-review-makes-writing-and-finding-plain-text-notes-simple.html&quot; title=&quot;nvALT review: Makes writing and finding plain-text notes simple | Macworld&quot;&gt;Macworld&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;나는 아주 긴 호흡의 글이 아니라면 모든 글을 nvALT에서 쓴다. 긴 호흡의 글도 처음에는 nvALT에서 쓰기 시작해서 Scrivener로 옮겨 가는 경우가 많다. nvALT는 개발자의 &lt;a href=&quot;http://brettterpstra.com/projects/nvalt/&quot;&gt;프로젝트 페이지&lt;/a&gt;에서 무료로 내려받을 수 있다.&lt;/p&gt;

&lt;h2&gt;nvALT의 특징&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[[ ]]사이에 들어 가는 단어들이 다른 노트들의 링크가 된다.&lt;/strong&gt; 많은 노트를 간단히 서로 연결할 수 있다. 특정 주제에 대해 많은 자료를 수집하는 경우 상당히 유용하다. [[ ]] 안에 노트 제목을 입력할 때 자동완성 기능을 지원한다(옵션에서 선택 가능, shortcut = ⌘⇧L).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;막강한 태그 입력 &amp;amp; 동기화&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;nvALT에서 각 노트에 입력한 태그는 Dropbox를 통해 동기화되며 Spotlight에서 검색할 수 있다.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;태그 입력 시 자동 완성&lt;/strong&gt; 기능은 기본이다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;여러 노트를 다중 선택해서 태그 입력&lt;/strong&gt;이 가능하다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.hogbaysoftware.com/products/taskpaper&quot;&gt;&lt;strong&gt;TaskPaper&lt;/strong&gt;&lt;/a&gt;를 사용하는 사람에겐 &lt;strong&gt;&amp;quot;@done&amp;quot; 태그를 지원&lt;/strong&gt;하여 strikethrough 형식을 지원한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;자동 저장 기능&lt;/strong&gt;이 있다. 실컷 적던 글을 날리고 중간중간 저장을 하지 않은 자신을 자책하지 않아도 된다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dropbox의 폴더 안에 문서 저장 폴더&lt;/strong&gt;를 두면 어디서나 맥에서 편집한 문서에 접근할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://simplenote.com/&quot;&gt;Simplenote&lt;/a&gt;와 동기화&lt;/strong&gt;할 수 있다. 태그도 동기화된다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;마크다운 문법을 지원한다.&lt;/strong&gt; 마크다운 완성 기능을 활성화하면 마크다운 글쓰기가 더 편해진다.&lt;/li&gt;
&lt;li&gt;괄호와 따옴표([], (), &amp;quot;&amp;quot;, &amp;#39;&amp;#39;)의 &lt;strong&gt;auto-pairing&lt;/strong&gt;을 지원한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;외부 텍스트 편집기를 지원&lt;/strong&gt;한다. 설정에서 외부 텍스트 편집기를 지정한 후 &amp;quot;⌘⇧E&amp;quot;를 누르면 선택한 문서를 다른 편집 앱에서 열 수 있다. 나는 nvALT에서 마크다운으로 글을 작성하고 &lt;a href=&quot;http://marked2app.com/&quot;&gt;Marked 2&lt;/a&gt;에서 글이 어떤 형식으로 보이는지 확인한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;미리보기 창을 지원한다.&lt;/strong&gt; 외부편집기를 사용하지 않아도 마크다운으로 작성한 문서가 어떻게 보일지 확인할 수 있다.

&lt;ul&gt;
&lt;li&gt;HTML과 CSS를 커스터마이징 할 수 있다.&lt;/li&gt;
&lt;li&gt;미리보기에 &amp;quot;Pin&amp;quot;해두고 다른 노트를 편집할 때도 원하는 문서를 미리보기 창에서 볼 수 있다.&lt;/li&gt;
&lt;li&gt;HTML 소스 탭이 있어 소스를 빠르게 복사/붙여넣을 수 있다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://peg.gd/&quot; title=&quot;Peggd&quot;&gt;Peggd&lt;/a&gt;를 통해 문서를 공유할 수 있다.&lt;/li&gt;
&lt;li&gt;노트목록과 검색 필드를 접고/펼(Collapse/Expand) 수 있다.&lt;/li&gt;
&lt;li&gt;스크롤바 토글이 가능하다.&lt;/li&gt;
&lt;li&gt;단어 수 카운트 기능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;nvALT 기본 사용법&lt;/h2&gt;

&lt;p&gt;가장 먼저 노트를 저장할 폴더 − Dropbox 안의 폴더로 지정하면 다른 플랫폼에서의 접근성을 높일 수 있다 − 지정, 노트의 확장자와 유형 지정 등은 &amp;quot;⌘,&amp;quot;를 눌러 &lt;code&gt;환경설정 &amp;gt; Notes&lt;/code&gt; 에서 설정할 수 있다. 외부에디터로 사용할 앱은 &lt;code&gt;환경설정 &amp;gt; Editing&lt;/code&gt; 탭에서 지정 가능하며 그 외에 옵션 항목들과 &amp;quot;Fonts &amp;amp; Colors&amp;quot;도 개인이 사용하는 스타일에 맞도록 설정하면 된다.&lt;/p&gt;

&lt;h3&gt;노트 검색/관리&lt;/h3&gt;

&lt;p&gt;제일 위에 위치한 막대바가 검색필드이자 노트 작성의 시작이 되는 노트 제목 입력란이다. nvALT 내 어디서나 &amp;quot;⌘L&amp;quot;로 검색필드를 선택할 수 있다. 검색필드에 타이핑을 시작하면 마치 최근의 웹브라우저의 주소창처럼 검색어 자동 완성 기능이 활성화되고, 동시에 검색어 관련 노트들이 검색필드 아래에 노트목록으로 나타난다. 노트를 찾기 위해 &amp;quot;⌘+↑↓&amp;quot;으로 노트목록을 탐색할 수 있다. 원하는 노트가 선택되면 &amp;quot;Tab&amp;quot;키를 눌러 바로 편집할 수 있다.&lt;/p&gt;

&lt;p&gt;노트의 이름을 변경하려면 &amp;quot;⌘R&amp;quot;을 눌러 변경하면 된다. 노트를 삭제하려면 &amp;quot;⌘⌫&amp;quot;을 누르면 된다.&lt;/p&gt;

&lt;h3&gt;새로운 노트 만들기&lt;/h3&gt;

&lt;p&gt;위에서 검색필드로 사용한 곳에 새로운 노트의 이름을 적고 리턴키를 누른다. 그리고 노트의 내용을 쓰면 된다. 노트를 작성하면 저장소로 지정한 폴더에 저절로 저장된다.&lt;/p&gt;

&lt;h3&gt;노트에 태그 지정하기&lt;/h3&gt;

&lt;p&gt;편집 중인 노트나 검색하여 선택한 노트에서 &amp;quot;⌘⇧T&amp;quot;를 누르면 태그를 입력할 수 있다. 자동완성 기능을 제공한다.&lt;/p&gt;

&lt;h3&gt;노트 즐겨찾기 이용하기&lt;/h3&gt;

&lt;p&gt;nvALT에서는 즐겨찾기(bookmark) 기능이 있다. &amp;quot;책갈피&amp;quot;라는 말이 더 어울리겠다. 원하는 노트를 즐겨찾기에 추가해두면 단축키(⌘+숫자)가 저절로 지정된다. 나중에 다른 노트를 다루다가 해당 단축키를 누르면 지정된 노트로 바로 이동할 수 있다.&lt;/p&gt;

&lt;p&gt;nvALT 즐겨찾기 단축키는 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;노트를 즐겨찾기에 추가: ⌘⇧D&lt;/li&gt;
&lt;li&gt;등록된 즐겨찾기 목록 보기: ⌘0&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;노트 미리보기&lt;/h3&gt;

&lt;p&gt;메뉴를 눌러서 접근할 수 있지만 나는 키보드 단축키를 이용한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;미리보기 창 토글: ⌘^P&lt;/li&gt;
&lt;li&gt;소스 보기 토글: ⌘U&lt;/li&gt;
&lt;li&gt;미리보기 창에 노트 고정: ⌥⇧⌘L&lt;/li&gt;
&lt;li&gt;미리보기/PDF 프린트: ⌥⇧⌘P&lt;/li&gt;
&lt;li&gt;미리보기 HTML 저장: ⇧⌘S&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;노트 작성 팁&lt;/h2&gt;

&lt;h3&gt;북마클릿을 이용해서 노트 작성&lt;/h3&gt;

&lt;p&gt;사파리, 크롬, 파이어폭스 모든 웹브라우저에서 사용할 수 있다. 북마클릿을 즐겨찾기 막대에 끌어넣으면 바로 사용이 가능하다. 웹서핑을 하다가 노트에 넣고 싶은 페이지를 발견하면 북마클릿을 누른다. 그러면 보고 있는 웹페이지 전부가 nvALT에 새로운 노트로 저장된다. 물론 nvALT는 노트 앱이기에 이미지는 저장되지 않고 기본으로 Instapaper 모빌라이저를 사용해서 긁어 온다. 북마클릿을 수정하여 Instapaper 모빌라이저를 적용하지 않고 가져오도록 설정도 가능하다.&lt;/p&gt;

&lt;p&gt;북마클릿은 &lt;a href=&quot;http://jots.mypopescu.com/post/8529405944/nvalt-bookmarklet&quot;&gt;nvALT Bookmarklet :: think differently big&lt;/a&gt; 에서 내려받을 수 있다.&lt;/p&gt;

&lt;h3&gt;웹브라우저 익스텐션을 사용해서 노트 작성&lt;/h3&gt;

&lt;p&gt;사파리와 크롬에서 사용할 수 있다. 선택한 링크, 텍스트나 페이지 전부를 nvALT로 옮긴다. Instapater Mobilizer 사용 여부도 선택할 수 있다.&lt;/p&gt;

&lt;h3&gt;Keyboard Maestro Macro를 이용해서 빠른 노트 작성&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://forum.keyboardmaestro.com/t/sample-script-take-quick-note-with-nvalt/535/8&quot; title=&quot;Sample Script: Take Quick Note with NVAlt - Keyboard Maestro Discourse&quot;&gt;Keyboard Maestro 포럼의 글&lt;/a&gt; 중 가장 마지막에 공유된 nvALT {Create New Note} 매크로가 흥미롭다. nvALT의 URL scheme을 이용해서 빠르게 노트를 작성하는 매크로다.&lt;/p&gt;

&lt;p&gt;이 매크로를 실행하면 &amp;quot;2014-10-31-9:31:40 AM&amp;quot;처럼 &amp;quot;년-월-일-시간&amp;quot;이 제목으로 한 노트가 생성된다. &amp;quot;scratchx telephone call&amp;quot;이라는 태그도 자동으로 입력된다. 커서는 노트의 내용을 입력하는 영역에 위치하니 바로 원하는 글을 적으면 된다. 생성되는 제목의 형식이나 태그는 매크로를 받고 각자 필요에 따라 수정하면 된다. 사용해보니 매우 빠르게 메모하기 좋다. Keyboard Maestro와 nvALT를 모두 사용하는 사람이라면 한 번 받아보길 권한다.&lt;/p&gt;

&lt;h2&gt;맺음말&lt;/h2&gt;

&lt;p&gt;내가 맥을 사용할 때 nvALT는 거의 항상 켜져 있다. 그만큼 nvALT는 내 Maclife에 깊이 들어와 있는 앱이고 처음 접했을 때부터 지금까지 나를 실망시키지 않은 고마운 앱이다. 이 글을 읽는 당신에게도 좋은 친구가 되어줄 것이라 믿는다.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Nov 2014 00:27:28 +0900</pubDate>
        <link>http://halryang.github.io/How-I-Use-nvALT/</link>
        <guid isPermaLink="true">http://halryang.github.io/How-I-Use-nvALT/</guid>
      </item>
    
      <item>
        <title>Check for Update - Keyboard Maestro Macro</title>
        <description>&lt;p&gt;요즘 거의 모든 앱은 자동으로 업데이트가 있는지 확인하는 기능이 있다. 그래도 앱을 사용하다 보면 지금 사용하고 있는 버전이 가장 최신 업데이트 버전인지 확인하고 싶은 때가 있다. 그때마다 메뉴로 커서를 옮겨서 업데이트를 확인하기 귀찮아서 매크로를 만들었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://dl.dropboxusercontent.com/u/18183807/wp/CUkmm.jpg&quot; alt=&quot;Check for Update - Keyboard Maestro Macro&quot; title=&quot;Check for Update - Keyboard Maestro Macro&quot;&gt;&lt;/p&gt;

&lt;p&gt;단순하다. 맥에서 사용하는 거의 모든 앱이 화면의 왼쪽 위에 한 입 베어 문 사과 모양 아이콘의 바로 오른쪽에 해당 앱의 이름으로 된 메뉴를 제공한다. 보통 이 메뉴를 클릭해서 아래로 펼쳐지는 항목 중 &amp;quot;Check for update...&amp;quot;을 눌러서 최신 업데이트 버전인지 확인한다.&lt;/p&gt;

&lt;p&gt;그래서 이 매크로는 사과 아이콘 바로 우측 지점을 마우스 클릭하고 키보드 &amp;quot;C&amp;quot;키를 눌러 &amp;quot;Check for update...&amp;quot;항목을 선택한 후 ↩키를 누르도록 설정했다.&lt;/p&gt;

&lt;p&gt;물론 매크로가 단순한 만큼 한계가 있다. OS X에서 기본으로 제공하는 사파리, 메일, 메시지 등의 앱처럼 메뉴에 &amp;quot;Check for update...&amp;quot; 항목이 없는 경우 이 매크로가 제대로 작동하지 않는다. 하지만 이런 기본 제공 앱에서 따로 업데이트를 확인할 일이 없고, 다른 대부분의 앱에서는 제대로 작동한다.&lt;/p&gt;
</description>
        <pubDate>Fri, 31 Oct 2014 00:35:20 +0900</pubDate>
        <link>http://halryang.github.io/Check-for-Update/</link>
        <guid isPermaLink="true">http://halryang.github.io/Check-for-Update/</guid>
      </item>
    
      <item>
        <title>Markdown TOC Generator</title>
        <description>&lt;ol&gt;
&lt;li&gt;들어가며&lt;/li&gt;
&lt;li&gt;Markdown TOC Generator

&lt;ol&gt;
&lt;li&gt;장점&lt;/li&gt;
&lt;li&gt;단점&lt;/li&gt;
&lt;li&gt;필요사항&lt;/li&gt;
&lt;li&gt;사용법&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;맺음말&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2&gt;들어가며&lt;/h2&gt;

&lt;p&gt;마크다운 문서의 목차를 만드는 것에 관심이 생기고 검색하다가 도움을 받고자 ADN에 &lt;a href=&quot;https://alpha.app.net/charmjf/post/41954644&quot;&gt;질문&lt;/a&gt;을 올렸다. 친절하게도, ADN에서 내가 팔로우하고 있는 &lt;a href=&quot;https://alpha.app.net/jmjeong&quot;&gt;jmjeong&lt;/a&gt;님께서 마크다운 문서의 목차를 만드는 프로그램을 만들어서 배포하셨다. 터미널 명령어도 전혀 모르고 기본적인 프로그래밍 개념도 없는 내가 질문을 많이 했는데도 친절하게 설명해주셨다. 프로그램이 작동하는 원리는 모르지만, 나처럼 프로그래밍을 모르는 사람도 유용하게 사용하면 좋겠다는 생각이 들어 소개 글을 작성한다.&lt;/p&gt;

&lt;h2&gt;Markdown TOC Generator&lt;/h2&gt;

&lt;h3&gt;장점&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;특정 앱이 필요 없음&lt;/strong&gt;: toc.py 파일 하나만 내려받으면 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Depth 지정 옵션&lt;/strong&gt;: 목차에 포함할 Heading의 Depth를 지정할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;목차 형태 지정 옵션&lt;/strong&gt;: 목차의 항목에 말머리 형태를 다양한 조합으로 선택할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;들여쓰기 지정 옵션&lt;/strong&gt;: 목차의 하위 항목에 들여쓰기(Indent)를 얼마나 할지 설정할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;결과물을 터미널에서 바로 확인 가능&lt;/strong&gt;: 생성된 목차를 바로 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;클립보드에 복사 옵션&lt;/strong&gt;: 목차를 만들고 클립보드에 저장까지 한 번에 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;단점&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;커맨드 라인 인터페이스(Command-line interface, CLI)에 익숙하지 않은 사람에게는 생소할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;필요사항&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mac&lt;/li&gt;
&lt;li&gt;toc.py 파일[&lt;sup&gt;1]&lt;/sup&gt; &amp;gt;&amp;gt; &lt;a href=&quot;https://gist.github.com/jmjeong/e901993bb8924ecd8b1b&quot; title=&quot;markdown toc generator&quot;&gt;다운로드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;사용법&lt;/h3&gt;

&lt;p&gt;예를 들어 순서대로 설명하겠다. &amp;quot;~/User/Username/Notes&amp;quot;라는 폴더에 &amp;quot;mtest.md&amp;quot;라는 마크다운 문서가 있는 경우 &amp;quot;mtest.md&amp;quot; 문서의 목차를 생성하는 상황을 가정한다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;toc.py 파일을 내려받는다.&lt;/li&gt;
&lt;li&gt;내려받은 toc.py 파일을 &amp;quot;~/User/Username/Notes&amp;quot; 폴더에 넣는다.&lt;/li&gt;
&lt;li&gt;터미널을 실행하여 &lt;code&gt;cd Notes&lt;/code&gt; 명령어를 입력한다.

&lt;ul&gt;
&lt;li&gt;toc.py 파일과 마크다운 문서가 위치한 폴더로 이동하는 것이다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python toc.py mtest.md&lt;/code&gt; 명령어를 입력한다.

&lt;ul&gt;
&lt;li&gt;이 명령어가 toc.py 파일을 통해 원하는 문서의 목차를 생성한다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위의 순서대로 진행하면 터미널 화면에 생성된 목차가 초기 설정 값대로 출력된다. 옵션으로 설정 값을 변경할 수 있으며 초기 설정 값은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Depth(옵션 -d) = 2&lt;/strong&gt;: &lt;code&gt;##&lt;/code&gt;로 입력한 Heading 2부터 하위 Heading을 목차의 항목으로 가져온다. &lt;code&gt;python toc.py -d 3 mtest.md&lt;/code&gt;라고 명령하면 &lt;code&gt;###&lt;/code&gt;로 입력한 Heading 3부터 하위 Heading을 목차의 항목으로 가져온다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;들여쓰기(옵션 -i)&lt;/strong&gt; = 4: 항목이 하위 레벨로 내려갈수록 스페이스 4번의 공백으로 들여쓰기가 된다. &lt;code&gt;python toc.py -i 2 mtest.md&lt;/code&gt;라고 입력하면 스페이스 2번의 공백으로 들여쓰기가 된다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;클립보드로 복사(옵션 -c)&lt;/strong&gt;: 기본적으로는 클립보드로 복사하지 않고 터미널 화면에만 목차를 출력한다. &lt;code&gt;python toc.py -c mtest.md&lt;/code&gt;라고 명령하면 생성된 목차를 클립보드로 복사한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;말머리 기호(옵션 -f) = DD&lt;/strong&gt;: Heading 2,3은 숫자&amp;quot;1. &amp;quot;로, 그보다 하위 항목의 말머리 기호는 순서 없는 목록을 사용할 때 쓰이는 &amp;quot;* &amp;quot;가 기본으로 설정되어 있다. 선택할 수 있는 말머리 기호 옵션에는 &amp;quot;D:1., d:1.1., *:*, a:a., A:A., H:가. , h:ㄱ.&amp;quot; 이 있다. 각 옵션별 설정 값의 조합에 따라 다양한 형태의 목차를 얻을 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;맺음말&lt;/h2&gt;

&lt;p&gt;초기 버전에서는 설정할 수 있는 옵션이 적어서 내가 원하는 형태로 목차가 생성되지 않았다. 그래서 Keyboard Maestro Macro로 목차를 만들어서 삽입했는데, 지금 버전은 충분히 내가 원하는 형태의 목차를 만들 수 있다.&lt;/p&gt;

&lt;p&gt;나는 다른 옵션은 초기 설정값이 딱 원하는 결과물이어서 목차를 바로 클립보드로 저장하는 옵션만 추가하여 사용한다. 마크다운 문서를 열어 원하는 위치에 붙여넣으면 된다. 나는 글과 목차를 구분하기 원해서 위아래로 구분선을 넣는다. 이렇게 하면 내가 원하는 목차를 마크다운 문서에 넣을 수 있다.&lt;/p&gt;

&lt;p&gt;좋은 프로그램을 만들어 주신 &lt;a href=&quot;https://alpha.app.net/jmjeong&quot;&gt;jmjeong&lt;/a&gt;님께 감사하다는 말로 이번 글을 마무리한다. 정말 고맙습니다. :)&lt;/p&gt;

&lt;p&gt;[&lt;sup&gt;1]:&lt;/sup&gt; 이 글을 처음 작성하는 현재 1.5 버전이다. 페이지 오른쪽에 구름 모양 아이콘과 함께 &amp;quot;Download Gist&amp;quot;라고 적혀 있는 버튼을 눌러서 내려받을 수 있다. 압축을 해제하면 복잡한 이름의 폴더 안에 toc.py 파일이 있다.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Oct 2014 00:38:49 +0900</pubDate>
        <link>http://halryang.github.io/markdown-toc-generator/</link>
        <guid isPermaLink="true">http://halryang.github.io/markdown-toc-generator/</guid>
      </item>
    
      <item>
        <title>나의 Pinboard 사용법</title>
        <description>&lt;p&gt;나는 &lt;a href=&quot;https://pinboard.in/&quot;&gt;Pinboard&lt;/a&gt;를 접한 이후로 그 단순함과 빠릿빠릿함에 빠져서 지금은 RSS로 구독하는 사이트 외에 웹서핑을 통해 알게 되어 다시 볼 만한 사이트는 모두 Pinboard에 추가한다. RSS로 구독하고 있는 사이트에서도 다시 보고 싶은 글은 Pinboard에 저장하고 있다. 이글은 지금까지 내가 Pinboard를 이용하는 행태의 총정리이다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pinboard 소개&lt;/li&gt;
&lt;li&gt;Pinboard 즐겨찾기 추가]

&lt;ol&gt;
&lt;li&gt;Safari 북마클릿으로 추가&lt;/li&gt;
&lt;li&gt;IFTTT를 이용한 즐겨찾기 추가&lt;/li&gt;
&lt;li&gt;Shiori를 이용한 즐겨찾기 추가&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Pinboard 검색 및 보기

&lt;ol&gt;
&lt;li&gt;LaunchBar와 Pinboard&lt;/li&gt;
&lt;li&gt;Shiori를 이용한 나의 Pinboard 브라우징&lt;/li&gt;
&lt;li&gt;Alfred 사용자를 위한 워크플로우&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;iOS에서 Pinboard 사용하기&lt;/li&gt;
&lt;li&gt;맺음말&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Pinboard 소개&lt;/h2&gt;

&lt;p&gt;핀보드는 온라인에서 찾은 링크를 보관할 수 있는 유료 웹서비스다. 유료 모델이 상당히 독특한데, 처음 가입할 때 가입비가 들고 그 이후에는 평생 무료다.[&lt;sup&gt;1]&lt;/sup&gt; 현재 $10.52[&lt;sup&gt;2]에&lt;/sup&gt; 가입할 수 있다. 모든 링크를 보관할 수 있으며 각 링크마다 공개할 것인지 비공개로 보관하여 나만 볼 수 있도록 할 것인지 선택할 수 있다. 광고가 없는 매우 간결한 디자인으로 보이는 것보다는 성능이 중요하다고 생각하는 사람이라면 매우 좋아할 것이다.&lt;/p&gt;

&lt;p&gt;핀보드가 말하는 핀보드를 사용해야 하는 13가지 이유는 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;핀보드는 매우 빠르다. 링크와 태그가 수만개에 달해도 빠르다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://delicious.com/&quot;&gt;Delicious&lt;/a&gt;, &lt;a href=&quot;https://www.instapaper.com/&quot;&gt;Instapaper&lt;/a&gt;, &lt;a href=&quot;https://getpocket.com/&quot;&gt;Pocket&lt;/a&gt;를 포함한 여러 다른 사이트에서 즐겨찾기를 동기화할 수 있다.&lt;/li&gt;
&lt;li&gt;트위터 계정을 3개까지 연결하여 사용자의 트윗을 검색가능하도록 보관할 수 있다.&lt;/li&gt;
&lt;li&gt;신뢰할 수 있을만한 안정성을 제공한다. 서비스가 정지되는 경우는 좀처럼 없으며 있다 하더라도 잠시 후 정상화된다.[&lt;sup&gt;3]&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;Pinboard는 간결하고 가벼운 디자인을 제공한다.&lt;/li&gt;
&lt;li&gt;가격 정책이 간단하고 비싸지 않다. 단 한 번의 가입비만 내면 된다.&lt;/li&gt;
&lt;li&gt;핀보드 사이트의 모든 것은 RSS 피드로 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;다양한 형태로 데이터를 가져오고(Import) 내보낼(Export) 수 있다.&lt;/li&gt;
&lt;li&gt;손쉽게 사용할 수 있는 브라우저 플러그인을 제공한다.&lt;/li&gt;
&lt;li&gt;사용자의 비밀을 유지한다. 핀보드 사용자의 절반은 자신의 링크를 공개하지 않는다.&lt;/li&gt;
&lt;li&gt;full API를 제공하며 많은 수의 써드파티 클라이언트 앱이 있다.&lt;/li&gt;
&lt;li&gt;이메일과 트위터를 통해 빠른 고객지원을 제공한다.&lt;/li&gt;
&lt;li&gt;납득할 정도의 적당한 비즈니스 모델을 갖고 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;자세한 설명은 핀보드에서 제공하는 &lt;a href=&quot;https://pinboard.in/tour/&quot; title=&quot;Pinboard Site Tour — Better Online Bookmarking!&quot;&gt;소개 페이지&lt;/a&gt;를 참고하기 바란다.&lt;/p&gt;

&lt;h2&gt;Pinboard 즐겨찾기 추가&lt;/h2&gt;

&lt;h3&gt;Safari 북마클릿으로 추가&lt;/h3&gt;

&lt;p&gt;주로 맥북으로 웹서핑을 하는 나는 Safari 북마클릿을 이용해서 Pinboard에 보고 있는 페이지를 추가했다. 이것도 그리 나쁘진 않다. Safari에서 보고 있는 웹페이지를 Pinboard에 추가하고 싶으면 나의 경우 &amp;quot;⌘+3&amp;quot;을 누르면 바로 Pinboard에 추가할 수 있는 팝업 창이 생성되고, URL과 title은 현재 페이지의 정보가 저절로 입력된다. 추가로 description, tags를 입력하거나, private 즐겨찾기로 저장할 것인지, 나중에 읽기(read later)로 저장할 것인지 선택할 수 있다. 여기서 현재 추가하려는 페이지에 어울릴만한 태그를 제안(suggest)하니, 즐겨찾기를 추가하는 데 필요한 기능은 모두 있다. Pinboard에서 제공하는 &lt;a href=&quot;https://pinboard.in/howto/#saving&quot; title=&quot;Pinboard: howto page&quot;&gt;즐겨찾기를 저장하는 방법&lt;/a&gt;에 더 자세한 설명이 있다.&lt;/p&gt;

&lt;h3&gt;IFTTT를 이용한 즐겨찾기 추가&lt;/h3&gt;

&lt;p&gt;또 하나의 중요한 즐겨찾기를 추가하는 방법은 &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt;를 이용하는 것이다. IFTTT는 &lt;a href=&quot;http://twitter.com/&quot;&gt;트위터&lt;/a&gt;와 &lt;a href=&quot;http://app.net/&quot;&gt;ADN&lt;/a&gt;을 포함한 수많은 채널이 존재하고 각 채널 간의 상호작용을 자동화할 수 있는 서비스이다. 매우 편리한 서비스인데 무료이니 혹시 아직 사용해보지 않았다면 둘러보길 바란다. 내가 여기서 말하고자 하는 레시피는 트위터와 ADN에서 Favorite 한 트윗/포스트의 링크를 Pinboard에 공개 즐겨찾기(Public bookmark)로 저장하는 것이다. 매우 단순하고 직관적으로 레시피를 만들고 활성화할 수 있다.&lt;/p&gt;

&lt;p&gt;트위터와 ADN의 타임라인을 보다 보면 읽어보고 싶은 링크를 발견하는 경우가 많은데 나는 그때마다 링크를 클릭해서 링크 글을 읽지 않고 일단 Favorite 기능을 이용하여 &amp;quot;별표&amp;quot;한다. 이렇게 하면 위에서 활성화한 IFTTT 레시피를 통해 별표된 트윗/포스트가 내 Pinboard 즐겨찾기에 저장되고 나중에 원하는 시간에 읽을 수 있다. IFTTT는 실시간으로 동기화되는 것은 아니고 일정 시간 간격으로 트리거 되지만 내가 아주 많은 링크를 별표 하는 것은 아니라서 지금까지 문제가 된 적은 없다.&lt;/p&gt;

&lt;h3&gt;Shiori를 이용한 즐겨찾기 추가&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://aki-null.net/shiori/&quot; title=&quot;Shiori - Pinboard and Delicious OS X client&quot;&gt;Shiori&lt;/a&gt;는 &lt;a href=&quot;https://pinboard.in/&quot;&gt;Pinboard&lt;/a&gt;와 &lt;a href=&quot;https://delicious.com/&quot;&gt;Delicious&lt;/a&gt;의 즐겨찾기를 검색하고 추가할 수 있는 OS X 클라이언트 앱이다. 단순하고 보기 좋은 인터페이스로 자신의 Pinboard에 즐겨찾기를 추가할 수 있으며 Safari, 크롬, 파이어폭스를 지원하여 웹브라우저에서 현재 보고 있는 페이지를 손쉽게 추가할 수 있다. 이때 현재 보고 있는 페이지의 URL과 제목이 저절로 들어가는 것은 물론이고 태그 입력 시 자동 완성 기능, Notes에 원하는 메모를 입력하거나, Private 즐겨찾기로 추가하는 옵션이 있다. 태그 입력하는 필드 오른편에 있는 &amp;quot;+&amp;quot;버튼을 누르면 태그 추천 창이 팝업된다. 설정에서 Private URLs 탭을 이용하면 특정 도메인의 페이지를 즐겨찾기 추가할 때 자동으로 Private 즐겨찾기로 등록하도록 설정할 수 있다.&lt;/p&gt;

&lt;p&gt;OS X 10.7 이상의 운영체제를 사용하고 있다면 &lt;a href=&quot;http://aki-null.net/shiori/release/Shiori_1.0.2.zip&quot;&gt;이곳&lt;/a&gt;에서 무료로 내려받을 수 있다. 나는 현재 요세미티에서 아무런 문제 없이 사용하고 있다. Shiori에 대한 다른 리뷰는 &lt;a href=&quot;http://www.macstories.net/mac/shiori-free-pinboard-client-for-mac/&quot; title=&quot;Shiori, Free Pinboard Client for Mac – MacStories&quot;&gt;MacStories&lt;/a&gt;와 &lt;a href=&quot;http://www.idownloadblog.com/2013/11/30/shiori-my-favorite-pinboard-utility-for-the-mac/&quot; title=&quot;Shiori: my favorite Pinboard utility for the Mac&quot;&gt;iDownloadBlog&lt;/a&gt;에서 볼 수 있다.&lt;/p&gt;

&lt;h2&gt;Pinboard 검색 및 보기&lt;/h2&gt;

&lt;p&gt;Pinboard에 등록한 즐겨찾기를 검색하고 보는 방법은 크게 세 가지 방법으로 사용중이다. 가장 평범한 방법인 Safari에서 바로 &lt;a href=&quot;https://pinboard.in&quot;&gt;https://pinboard.in&lt;/a&gt;에 접속해서 보는 방법과, LaunchBar 액션을 이용해서 보는 방법, Shiori를 이용하는 방법이다. &lt;a href=&quot;https://pinboard.in&quot;&gt;https://pinboard.in&lt;/a&gt;에 접속해서 보는 방법은 따로 설명할 필요가 없을 것 같으니 나머지 두 가지 방법만 설명하겠다.&lt;/p&gt;

&lt;h3&gt;LaunchBar와 Pinboard&lt;/h3&gt;

&lt;p&gt;나는 Pinboard와 관련된 LaunchBar 액션을 2개 쓰고 있다. 하나는 &lt;a href=&quot;https://github.com/gillibrand/launchbar-pinboard&quot; title=&quot;gillibrand/launchbar-pinboard&quot;&gt;나의 Pinboard 즐겨찾기를 보기 위한 액션&lt;/a&gt;이다. 이것을 이용하면 내가 등록한 즐겨찾기를 태그 검색, 최근 25개의 항목, 읽지 않은 즐겨찾기 등의 다양한 옵션으로 접근할 수 있다. 이 액션이 내가 지금까지 찾은 LaunchBar 액션 중에서 가장 빠르게 최근 등록된 즐겨찾기를 보여주었다. &lt;a href=&quot;http://www.macdrifter.com/2014/07/pinboard-actions-for-launchbar.html&quot; title=&quot;Pinboard Actions for Launchbar&quot;&gt;Macdrifter에 있는 글&lt;/a&gt;을 참고하면 액션을 실행했을 때 어떻게 보이는지 확인할 수 있다. &lt;/p&gt;

&lt;p&gt;위의 액션은 Pinboard에 내가 등록한 즐겨찾기만 검색할 수 있다. 그래서 나는 다른 Pinboard 사용자들이 등록한 공개 즐겨찾기도 검색할 수 있는 &lt;a href=&quot;https://github.com/nbjahan/launchbar-pinboard/releases/tag/v1.0.2&quot;&gt;Pinboard Browse 액션&lt;/a&gt;을 하나 더 등록해서 쓰고 있다. Pinboard를 완벽하게 사용할 수 있는 액션 세트라서 자신의 Pinboard 즐겨찾기를 탐색할 수 있는 Pinboard 액션도 함께 있는데, 내가 사용해 본 바로는 새로운 즐겨찾기가 등록되면 최근 등록된 즐겨찾기 목록에 올라오는 데 시간 딜레이가 좀 있었다. 그래서 나는 이 액션 묶음 중에서 Pinboard Browse라는 액션만 활성화하여 사용하는 중이다.&lt;/p&gt;

&lt;h3&gt;Shiori를 이용한 나의 Pinboard 브라우징&lt;/h3&gt;

&lt;p&gt;Shiori에서 대해서는 앞에 즐겨찾기를 추가하는 방법에서 소개했다. Shiori에서는 내가 등록한 Pinboard를 검색할 수 있다. 이미 등록한 즐겨찾기를 편집할 수는 없다. Shiori를 통해 등록한 북마크를 검색하면 축약어(abbreviations)를 사용하여 검색할 수 있어서 − 예를 들어 &lt;em&gt;Pinboard&lt;/em&gt;를 &lt;em&gt;pbd&lt;/em&gt;만 입력하여 검색할 수 있다 − 더욱 빠르게 검색할 수 있다는 장점이 있다. Shiori는 사용자의 습관을 학습하여 더 많이 Shiori를 사용할수록 더 똑똑해진다고 한다.&lt;/p&gt;

&lt;h3&gt;Alfred 사용자를 위한 워크플로우&lt;/h3&gt;

&lt;p&gt;Alfred 사용자를 위한 보너스가 있다. &lt;a href=&quot;http://www.alfredforum.com/topic/4426-alfred-pinboard-version-225-updated/&quot; title=&quot;alfred-pinboard version 2.25 (updated) - Share your Workflows - Alfred App Community Forum&quot;&gt;jmjeong님이 공유한 워크플로우&lt;/a&gt;를 확인해보길 바란다.&lt;/p&gt;

&lt;h2&gt;iOS에서 Pinboard 사용하기&lt;/h2&gt;

&lt;p&gt;iOS에는 Pinboard를 편하게 사용할 수 있도록 돕는 어플이 많이 있다. 가장 대표적인 것들에는 &lt;a href=&quot;https://itunes.apple.com/kr/app/pinswift-fast-powerful-pinboard/id766741240?mt=8&amp;amp;uo=4&quot;&gt;Pinswift&lt;/a&gt;, &lt;a href=&quot;https://itunes.apple.com/kr/app/pushpin-for-pinboard/id548052590?mt=8&amp;amp;uo=4&quot;&gt;Pushpin&lt;/a&gt;, &lt;a href=&quot;https://itunes.apple.com/kr/app/pinner-for-pinboard/id591613202?l=en&amp;amp;mt=8&quot;&gt;Pinner&lt;/a&gt; 등이 있다. 나는 현재 Pinswift를 사용한다. Pinswift는 iOS 8에 대응하여 업데이트 되면서 많은 장점이 생겼다. 그 특징은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;iOS 8 공유 익스텐션 지원&lt;/strong&gt;으로 시스템의 기본 공유 메뉴를 지원하는 곳이라면 어디서나 페이지를 즐겨찾기로 추가할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;즐겨찾기 제목과 Description을 제안&lt;/strong&gt;하여 대부분의 웹페이지를 즐겨찾기에 추가할 때 제목과 설명을 따로 입력하지 않아도 된다. 물론 사용자가 원한다면 즐겨찾기 제목과 설명을 원하는대로 입력할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;짧은 제목 제안&lt;/strong&gt;기능은 위의 즐겨찾기 제목 제안 기능에 추가되는 기능이라고 생각하면 되겠다. 페이지를 즐겨찾기에 추가할 때 사이트 이름이나 도메인 이름 등을 제거하여 더 짧은 제목을 제안한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;태그 제안&lt;/strong&gt;과 &lt;strong&gt;태그 자동완성 기능&lt;/strong&gt;은 기본이다.&lt;/li&gt;
&lt;li&gt;클립보드에 URL 주소가 복사되어 있는 상태에서 Pinswift를 실행하면 클립보드에 있는 주소를 즐겨찾기에 추가할 것인지 물어본다.&lt;/li&gt;
&lt;li&gt;Pinswift 내에서 브라우징 하는 것도 상당히 매끄럽게 잘 실행된다.&lt;/li&gt;
&lt;li&gt;사진, 움직이는 GIF, PDF 등 HTML URL이 아닌 것들은 &lt;em&gt;Open in&lt;/em&gt; 액션을 이용하여 다른 앱에서 열 수 있다.&lt;/li&gt;
&lt;li&gt;트위터 링크나 사용자 이름은 사용자가 선택한 트위터 앱에서 열리도록 설정할 수 있다. 나는 Tweetbot 3를 사용하기에 Tweetbot 3에서 열리도록 설정해뒀다.&lt;/li&gt;
&lt;li&gt;URL scheme를 지원하여 &lt;a href=&quot;https://itunes.apple.com/kr/app/drafts-4-quickly-capture-notes/id905337691?l=en&amp;amp;mt=8&quot;&gt;Drafts 4&lt;/a&gt;, &lt;a href=&quot;https://itunes.apple.com/kr/app/launch-center-pro/id532016360?l=en&amp;amp;mt=8&quot;&gt;Launch Center Pro&lt;/a&gt;, &lt;a href=&quot;https://itunes.apple.com/kr/app/day-one-journal-notes-diary/id421706526?l=en&amp;amp;mt=8&quot;&gt;DayOne&lt;/a&gt;, &lt;a href=&quot;https://itunes.apple.com/kr/app/due-super-fast-reminders-reusable/id390017969?l=en&amp;amp;mt=8&quot;&gt;Due&lt;/a&gt; 등의 다른 앱들과 연계가 잘 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;나는 Pinswift를 사용하기에 Pinswift의 특징을 간략하게 설명했지만 꼭 Pinswift가 아니어도 Pinboard를 매우 편하게 사용할 수 있도록 하는 앱들이 많으니 아이폰이나 아이패드를 사용하는 사람은 Pinboard 전용 앱을 써볼 것을 권장한다.&lt;/p&gt;

&lt;h2&gt;맺음말&lt;/h2&gt;

&lt;p&gt;지금까지 내가 Pinboard를 사용하는 방법을 정리했다. 긴 글을 적으면서 내가 Pinboard를 접한 이후로 벌써 이런 시도들을 해봤구나 하는 생각이 들기도 하고 Pinboard를 가장 잘 사용하기 위해 나보다 훨씬 다양한 방법을 시도해 본 사람도 분명 있을 것이란 생각도 들었다. 이 글이 이제부터 Pinboard를 사용해보려는 생각을 갖고 있는 사람이나 이미 Pinboard를 사용하고는 있지만 &lt;a href=&quot;http://pinboard.in&quot; title=&quot;Pinboard website&quot;&gt;Pinboard 웹사이트&lt;/a&gt;만 사용하다가 다른 방법을 찾아 헤메는 사람에게 도움이 되었으면 좋겠다.&lt;/p&gt;

&lt;p&gt;[&lt;sup&gt;1]:&lt;/sup&gt; 링크의 원래 페이지가 없어지더라도 볼 수 있도록 보관하는 &amp;quot;Bookmark Archive&amp;quot; 기능을 이용하려면 &amp;quot;$25/년&amp;quot;의 별도 플랜을 이용해야 한다.&lt;/p&gt;

&lt;p&gt;[&lt;sup&gt;2]:&lt;/sup&gt; 가입자가 늘어날수록 가입비가 비싸진다. 내가 가입할 때도 $10 정도였으니 지금 가입자가 많이 늘어나고 있지는 않은 것 같다.&lt;/p&gt;

&lt;p&gt;[&lt;sup&gt;3]:&lt;/sup&gt; 나는 지금까지 Pinboard가 작동하지 않는 것을 본 적이 없다.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Oct 2014 00:41:38 +0900</pubDate>
        <link>http://halryang.github.io/How-I-Use-Pinboard/</link>
        <guid isPermaLink="true">http://halryang.github.io/How-I-Use-Pinboard/</guid>
      </item>
    
      <item>
        <title>블로그 댓글 시스템 없앰</title>
        <description>&lt;p&gt;블로그를 처음 개설할 때부터 블로그에 댓글이 꼭 필요한지 생각했습니다. 블로그가 소통의 창구로 사용될 수 있기에 댓글의 순기능과 악기능에 대해 이미 블로그를 운영하는 사람들의 많은 의견이 있었습니다. 이에 대해서는 Matt Gemmell이 적은 &lt;a href=&quot;http://mattgemmell.com/comments-commentary/&quot; title=&quot;Comments Commentary - Matt Gemmell&quot;&gt;Comments Commentary&lt;/a&gt;라는 글에서 외국 블로거의 많은 의견을 볼 수 있습니다. 제가 이 블로그를 시작하면서 많이 참고했고 지금도 참고중인 &lt;a href=&quot;http://seoulrain.net/2506/#11&quot; title=&quot;워드프레스 블로그에서 사용자를 배려하기 | Seoulrain&quot;&gt;서울비님의 글&lt;/a&gt;에서도 블로그에 댓글 시스템을 어떻게 운용할지 언급되어 있습니다.&lt;/p&gt;

&lt;p&gt;전 방문자가 없고 댓글도 달리지 않는 소시민 블로그를 운영하고 있기에 일단 블로그에 내용을 채우고 생각하기로 하고 지금까지 블로그를 운영하고 있었습니다. 그렇게 잊고 지냈습니다. 댓글이 없어서 잊을 수 있었던 것 같습니다.&lt;/p&gt;

&lt;p&gt;그런데 오늘 웹서핑하다가 들어간 &lt;a href=&quot;http://shindi.net&quot;&gt;Shindi.net&lt;/a&gt;의 &lt;a href=&quot;http://shindi.net/2012/01/29/comment-off/&quot; title=&quot;댓글 잠금 : Shindi.net&quot;&gt;댓글 잠금이라는 글&lt;/a&gt;과 &lt;a href=&quot;http://yoonjiman.net/2013/07/29/blog-feedback-and-comment-off/&quot; title=&quot;블로그와 피드백 그리고 댓글 잠금 - Yoon Jiman&quot;&gt;윤지만님의 글&lt;/a&gt;을 읽고 보니 &lt;strong&gt;가독성&lt;/strong&gt;을 생각해서라도 댓글을 없애는 것이 좋겠다는 결론을 내렸습니다.&lt;/p&gt;

&lt;p&gt;제 블로그에서도 댓글을 잠그기로 결정했습니다. 조만간 About 페이지에 트위터, ADN, 이메일을 적어두겠습니다. 그렇게 하면 제게 피드백 할 사항이 있다면 충분히 의견을 나눌 수 있을 것이라 생각합니다. 전 사람과 함께 살아가기 원합니다. 하지만 스팸성이 짙은 댓글이나 익명성에 가린 무분별한 비난의 댓글이 아닌 진정한 소통을 원합니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Oct 2014 00:46:42 +0900</pubDate>
        <link>http://halryang.github.io/Disable-comments/</link>
        <guid isPermaLink="true">http://halryang.github.io/Disable-comments/</guid>
      </item>
    
      <item>
        <title>Copy Dropbox public link url to Clipboard - Keyboard Maestro Macro</title>
        <description>&lt;h2&gt;Dropbox의 Public 폴더 안의 파일의 공유 링크를 쉽게 얻자&lt;/h2&gt;

&lt;p&gt;나처럼 Mytory markdown plugin을 사용해서 워드프레스에 포스팅하는 경우(워드프레스 포스팅 자동화에 관한 &lt;a href=&quot;http://sunjin.us/automation-for-wp-posting/&quot; title=&quot;Automation for wp posting | SUNJIN&quot;&gt;이전 글&lt;/a&gt; 참조) Dropbox의 공개링크 url이 필요하다. 그래서 Copy Dropbox public link url to Clipboard 라는 긴 이름의 Keyboard Maestro Macro를 만들었다. 매크로 이름에서 바로 오늘 소개할 매크로의 기능을 알 수 있다. Dropbox의 Public 폴더 안에 있는 파일의 공개링크주소를 클립보드에 복사한다. 이번 매크로에는 Automator로 만든 간단한 Workflow가 들어가 있다. Keyboard Maestro 내에서 파일을 선택하는 창을 띄울 수 있는지 몰라서 다른 방법을 찾다 보니 Automator를 사용하게 되었다. Keyboard Maestro에는 Automator workflow를 실행하는 액션이 있어서 Automator로 만든 workflow도 잘 녹아든다.&lt;/p&gt;

&lt;h3&gt;이 매크로의 장점&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;어느 앱에서 무슨 일을 하던 중에라도 Public 폴더 내의 파일을 선택하여 공개링크를 얻을 수 있다.&lt;/li&gt;
&lt;li&gt;Dropbox의 Public 폴더 내의 파일이라면 어떤 파일이든 공개 링크를 얻을 수 있다.&lt;/li&gt;
&lt;li&gt;Public 폴더 내의 하위 폴더에 들어가 있어도 전혀 문제 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;필요사항&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;LaunchBar&lt;/li&gt;
&lt;li&gt;Keyboard Maestro&lt;/li&gt;
&lt;li&gt;Mac&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href=&quot;http://dl.dropboxusercontent.com/u/18183807/Copy%20Dropbox%20public%20link%20url%20to%20Clipboard.kmmacros&quot;&gt;Copy Dropbox public link url to Clipboard&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://dl.dropboxusercontent.com/u/18183807/wp/URLtoCl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;군더더기 없이 단순하다. &amp;#39;CopyPublicLink&amp;#39;라는 Automator workflow를 실행한 다음 &amp;#39;Dropbox public path to url&amp;#39;이라는 Keyboard Maestro Macro를 실행하는 두 단계로 나뉘어 있다. &lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://dl.dropboxusercontent.com/u/18183807/CopyPublicLink.workflow&quot;&gt;Copy Public Link&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://dl.dropboxusercontent.com/u/18183807/wp/automatorPL.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Automator Workflow는 새로운 Finder 윈도우를 열어 파일을 선택하는 것으로 시작한다. 여기서는 편의를 위해 Finder 창이 열릴 때 Dropbox의 Public 폴더를 기본으로 열도록 설정했다. 그 후엔 LaunchBar를 거쳐 &amp;#39;Copy to Clipboard&amp;#39; 액션으로 해당 파일의 경로를 클립보드에 복사한다.&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;http://dl.dropboxusercontent.com/u/18183807/Dropbox%20public%20path%20to%20url.kmmacros&quot;&gt;Dropbox public path to url&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://dl.dropboxusercontent.com/u/18183807/wp/kmmPtURL.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Dropbox public path to url 매크로에서는 위에서 얻어낸 파일의 경로를 공개링크 url로 바꾸어 클립보드에 저장한다. 나의 경우 Dropbox의 Public 폴더 내의 파일 경로는 &lt;code&gt;/Users/JF/Dropbox/Public/[파일명].[확장자]&lt;/code&gt;이다. 맥에서 기본적인 경로에 Dropbox를 설치한 사람이라면 나와 비슷한 경로를 가질 것이다. 여기서 &lt;code&gt;/Users/[사용자명]/Dropbox/Public/&lt;/code&gt;을 &lt;code&gt;http://dl.dropboxusercontent.com/u/[Dropbox-사용자-코드]/&lt;/code&gt;로 바꿔야 한다. 그리고 파일명에 공백이 들어간 경우 &lt;code&gt;%20&lt;/code&gt;과 같이 인코딩을 해야 url로 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Dropbox-사용자-코드&lt;/code&gt;에 들어갈 코드는 Dropbox의 Public 폴더 내의 아무 파일이나 우클릭해서 &amp;#39;공개 링크 복사&amp;#39;를 하면 &lt;code&gt;http://dl.dropboxusercontent.com/u/123456/[파일명].[확장자]&lt;/code&gt;와 같이 클립보드에 복사된다. 위의 예에서는 &amp;#39;123456&amp;#39;이 본인의 Dropbox code이다.&lt;/p&gt;

&lt;p&gt;이제 이 매크로를 액션 순서대로 설명하면 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;/Users/[사용자명]/Dropbox/Public/&lt;/code&gt;을 지운다.&lt;/li&gt;
&lt;li&gt;남은 &lt;code&gt;[Public-folder-안의-하위폴더]/[파일명].[확장자]&lt;/code&gt;를 URL을 위해 퍼센트 인코딩한다.&lt;/li&gt;
&lt;li&gt;클립보드에 앞에 &lt;code&gt;http://dl.dropboxusercontent.com/u/[Dropbox-사용자-코드]/&lt;/code&gt;를 추가하여 클립보드에 복사한다.&lt;/li&gt;
&lt;li&gt;확인을 위해 클립보드에 복사된 내용을 잠시 보여준다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;마지막으로 클립보드에 복사되는 url 주소는 &lt;code&gt;http://dl.dropboxusercontent.com/u/[Dropbox-사용자-코드]/[Public-folder-안의-하위폴더]/[파일명].[확장자]&lt;/code&gt;이다. 물론 Public 폴더 안에 또다른 하위 폴더에 들어가 있는 파일이 아니라면 &lt;code&gt;http://dl.dropboxusercontent.com/u/[Dropbox-사용자-코드]/[파일명].[확장자]&lt;/code&gt;의 형태로 클립보드에 복사된다.&lt;/p&gt;

&lt;h3&gt;매크로 사용법&lt;/h3&gt;

&lt;p&gt;스크립트를 알면 훨씬 간단하게 매크로를 작성할 수 있겠다 싶었는데, Keyboard Maestro Macro 공유하는 방법을 검색하다가 &lt;a href=&quot;http://mattgemmell.com/keyboard-maestro-macros/&quot; title=&quot;Keyboard Maestro macros - Matt Gemmell&quot;&gt;Matt Gemmell의 블로그&lt;/a&gt;에서 정말 간단한 &lt;a href=&quot;https://dl.dropboxusercontent.com/u/18183807/Finder%20macros.kmlibrary&quot;&gt;매크로&lt;/a&gt;를 발견했습니다. 파인더에서 파일 선택해서 매크로 실행하면 선택한 파일을 Dropbox의 Public 폴더로 이동하고, 공개링크주소는 클립보드에 복사됩니다. 역시 무식하면 저처럼 손발이 고생합니다.&lt;/p&gt;

&lt;p&gt;다만 위의 &lt;a href=&quot;https://dl.dropboxusercontent.com/u/18183807/Finder%20macros.kmlibrary&quot;&gt;매크로&lt;/a&gt;를 사용해보니 최종 클립보드에 복사된 url이 인코딩이 되지 않았습니다. 위에 링크한 매크로를 사용하시는 경우 퍼센트 인코딩 클립보드 필터 액션을 추가하여 사용하세요. 이 매크로는 Finder를 열어 원하는 파일을 선택한 상태에서 Trigger 하셔야 작동합니다.&lt;/p&gt;

&lt;p&gt;제가 만든 매크로에 따로 단축키는 설정하지 않은 상태이니 원하는 단축키를 설정해서 사용하면 됩니다. 저는 &amp;quot;⌘⌥^ T&amp;quot; 단축키를 사용하여 Trigger by name 패널에 &amp;quot;cdp&amp;quot;라고 입력해서 매크로를 실행하고 있습니다. 편한 방법으로 사용하시기 바랍니다. 이 글에 나온 Keyboard Maestro 매크로와 워크플로우는 아래에서 내려 받을 수 있습니다.&lt;/p&gt;

&lt;h3&gt;Keyboard Maestro 매크로와 워크플로우 다운로드 링크&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Copy Dropbox public link url to Clipboard: Keyboard Maestro Macro file(.kmmacros) &amp;gt;&amp;gt; &lt;a href=&quot;http://dl.dropboxusercontent.com/u/18183807/Copy%20Dropbox%20public%20link%20url%20to%20Clipboard.kmmacros&quot;&gt;다운로드&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Copy Public Link: Automator workflow file(.workflow) &amp;gt;&amp;gt; &lt;a href=&quot;http://dl.dropboxusercontent.com/u/18183807/CopyPublicLink.workflow&quot;&gt;다운로드&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Dropbox public path to url: Keyboard Maestro Macro file(.kmmacros) &amp;gt;&amp;gt; &lt;a href=&quot;http://dl.dropboxusercontent.com/u/18183807/Dropbox%20public%20path%20to%20url.kmmacros&quot;&gt;다운로드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 20 Oct 2014 23:35:35 +0900</pubDate>
        <link>http://halryang.github.io/getsharableurl/</link>
        <guid isPermaLink="true">http://halryang.github.io/getsharableurl/</guid>
      </item>
    
  </channel>
</rss>